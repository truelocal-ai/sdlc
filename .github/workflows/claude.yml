name: Claude Code

on:
  issue_comment:
    types: [created, edited]
  pull_request_review_comment:
    types: [created, edited]
  issues:
    types: [opened, assigned, edited]
  pull_request_review:
    types: [submitted, edited]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: self-hosted
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Extract Context
        id: context
        run: |
          case "${{ github.event_name }}" in
            issues)
              echo "NUMBER=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
              echo "TYPE=issue" >> $GITHUB_OUTPUT
              BODY="${{ github.event.issue.body }}"
              ;;
            issue_comment)
              echo "NUMBER=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
              echo "TYPE=issue" >> $GITHUB_OUTPUT
              BODY="${{ github.event.comment.body }}"
              ;;
            pull_request_review_comment)
              echo "NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
              echo "TYPE=pr" >> $GITHUB_OUTPUT
              echo "REF=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT
              echo "COMMENT_ID=${{ github.event.comment.id }}" >> $GITHUB_OUTPUT
              echo "COMMENT_PATH=${{ github.event.comment.path }}" >> $GITHUB_OUTPUT
              echo "COMMENT_LINE=${{ github.event.comment.line }}" >> $GITHUB_OUTPUT
              {
                echo "COMMENT_DIFF_HUNK<<EOF"
                echo "${{ github.event.comment.diff_hunk }}"
                echo "EOF"
              } >> $GITHUB_OUTPUT
              BODY="${{ github.event.comment.body }}"
              ;;
            pull_request_review)
              echo "NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
              echo "TYPE=pr" >> $GITHUB_OUTPUT
              echo "REF=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT
              BODY="${{ github.event.review.body }}"
              ;;
          esac

          # Check if PR branch follows issue-{number} pattern
          # If so, use the issue number for Claude branch but keep PR number for comments
          CLAUDE_NUMBER="${NUMBER}"
          CLAUDE_TYPE="${TYPE}"
          if [ "${{ github.event_name }}" == "pull_request_review_comment" ] || [ "${{ github.event_name }}" == "pull_request_review" ]; then
            BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
            if [[ "$BRANCH_NAME" =~ ^issue-([0-9]+)$ ]]; then
              ISSUE_NUM="${BASH_REMATCH[1]}"
              echo "Detected issue branch pattern: $BRANCH_NAME -> issue #$ISSUE_NUM"
              CLAUDE_NUMBER="$ISSUE_NUM"
              CLAUDE_TYPE="issue"
            fi
          fi
          echo "CLAUDE_NUMBER=$CLAUDE_NUMBER" >> $GITHUB_OUTPUT
          echo "CLAUDE_TYPE=$CLAUDE_TYPE" >> $GITHUB_OUTPUT

          # Remove @claude mentions
          BODY=$(echo "$BODY" | sed 's/@claude//g')

          # Multi-line output
          {
            echo "BODY<<EOF"
            echo "$BODY"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Run Claude Code
        run: |
          # Prefer an explicit PAT with repo + workflow scopes if provided; otherwise use the job token
          TOKEN="${{ secrets.GH_PAT }}"
          if [ -z "$TOKEN" ]; then
            TOKEN="${{ github.token }}"
          fi

          USER_PROMPT="You are working on ${{ steps.context.outputs.TYPE }} #${{ steps.context.outputs.NUMBER }} in repository ${{ github.repository }}."

          # Add PR review comment context if available
          if [ -n "${{ steps.context.outputs.COMMENT_PATH }}" ]; then
            USER_PROMPT="$USER_PROMPT

          This is a PR review comment on:
          - File: ${{ steps.context.outputs.COMMENT_PATH }}
          - Line: ${{ steps.context.outputs.COMMENT_LINE }}
          - Comment ID: ${{ steps.context.outputs.COMMENT_ID }}
          - Code context:
          \`\`\`
          ${{ steps.context.outputs.COMMENT_DIFF_HUNK }}
          \`\`\`"
          fi

          USER_PROMPT="$USER_PROMPT

          User request: ${{ steps.context.outputs.BODY }}"

          docker run --rm \
            -e CLAUDE_CODE_OAUTH_TOKEN="${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}" \
            -e GITHUB_TOKEN="$TOKEN" \
            -e GITHUB_REPOSITORY="${{ github.repository }}" \
            -e GITHUB_REF="${{ steps.context.outputs.REF }}" \
            -e CLAUDE_BRANCH_NAME="claude-${{ steps.context.outputs.CLAUDE_TYPE }}-${{ steps.context.outputs.CLAUDE_NUMBER }}" \
            -e USER_PROMPT="$USER_PROMPT" \
            -v /var/run/docker.sock:/var/run/docker.sock \
            sdlc-claude:latest
