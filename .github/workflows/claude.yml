name: Claude Code

on:
  issue_comment:
    types: [created, edited]
  pull_request_review_comment:
    types: [created, edited]
  issues:
    types: [opened, assigned, edited]
  pull_request_review:
    types: [submitted, edited]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: self-hosted
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Extract Context
        id: context
        run: |
          case "${{ github.event_name }}" in
            issues)
              echo "NUMBER=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
              echo "TYPE=issue" >> $GITHUB_OUTPUT
              BODY="${{ github.event.issue.body }}"
              ;;
            issue_comment)
              echo "NUMBER=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
              echo "TYPE=issue" >> $GITHUB_OUTPUT
              BODY="${{ github.event.comment.body }}"
              ;;
            pull_request_review_comment)
              echo "NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
              echo "TYPE=pr" >> $GITHUB_OUTPUT
              echo "REF=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT
              BODY="${{ github.event.comment.body }}"
              ;;
            pull_request_review)
              echo "NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
              echo "TYPE=pr" >> $GITHUB_OUTPUT
              echo "REF=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT
              BODY="${{ github.event.review.body }}"
              ;;
          esac

          # Remove @claude mentions
          BODY=$(echo "$BODY" | sed 's/@claude//g')

          # Multi-line output
          {
            echo "BODY<<EOF"
            echo "$BODY"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Run Claude Code
        run: |
          # Prefer an explicit PAT with repo + workflow scopes if provided; otherwise use the job token
          TOKEN="${{ secrets.GH_PAT }}"
          if [ -z "$TOKEN" ]; then
            TOKEN="${{ github.token }}"
          fi

          USER_PROMPT="You are working on ${{ steps.context.outputs.TYPE }} #${{ steps.context.outputs.NUMBER }} in repository ${{ github.repository }}.

          User request: ${{ steps.context.outputs.BODY }}"

          docker run --rm \
            -e CLAUDE_CODE_OAUTH_TOKEN="${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}" \
            -e GITHUB_TOKEN="$TOKEN" \
            -e GITHUB_REPOSITORY="${{ github.repository }}" \
            -e GITHUB_ACTOR="${{ github.actor }}" \
            -e GITHUB_REF="${{ steps.context.outputs.REF }}" \
            -e CLAUDE_BRANCH_NAME="${{ steps.context.outputs.TYPE }}-${{ steps.context.outputs.NUMBER }}-claude" \
            -e ISSUE_NUMBER="${{ steps.context.outputs.NUMBER }}" \
            -e ISSUE_TYPE="${{ steps.context.outputs.TYPE }}" \
            -e USER_PROMPT="$USER_PROMPT" \
            -v /var/run/docker.sock:/var/run/docker.sock \
            sdlc-claude:latest
